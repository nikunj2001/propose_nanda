{"version":3,"sources":["animation/HeartAccepted.tsx","animation/HeartNotAccepted.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Heart","options","animationData","heartJSON","loop","autoplay","style","width","height","useLottie","View","HeartBreak","heartBreakJSON","App","useState","isAccepted","setIsAccepted","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAgBeA,EAbD,WACZ,IAAMC,EAAyB,CAC7BC,cAAeC,EACfC,MAAM,EACNC,UAAU,EACVC,MAAO,CAACC,MAAO,IAAKC,OAAQ,MAK9B,OAFeC,oBAAUR,GAAlBS,M,OCKMC,EAbI,WACjB,IAAMV,EAAyB,CAC7BC,cAAeU,EACfR,MAAM,EACNC,UAAU,EACVC,MAAO,CAACC,MAAO,IAAKC,OAAQ,MAK9B,OAFeC,oBAAUR,GAAlBS,MCoCMG,MAxCf,WAAgB,IAAD,EACuBC,mBAAS,GADhC,mBACNC,EADM,KACMC,EADN,KAab,OACE,qBAAKC,UAAU,MAAf,SACE,uBAAMA,UAAU,aAAhB,UACkB,IAAfF,GACC,gCACE,4DACA,wBAAQE,UAAU,mBAAmBC,QAhB9B,WAEfF,EADc,IAeN,iBAAqE,IACrE,wBAAQC,UAAU,iBAAiBC,QAZ5B,WAEfF,EADc,IAWN,mBAGY,IAAfD,GACC,gCACE,mEACA,cAAC,EAAD,OAGY,IAAfA,GACC,gCACE,6EACA,cAAC,EAAD,aCzBGI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.337caffe.chunk.js","sourcesContent":["import {useLottie, LottieOptions} from 'lottie-react';\nimport heartJSON from '../assets/heart.json';\n\nconst Heart = () => {\n  const options: LottieOptions = {\n    animationData: heartJSON,\n    loop: true,\n    autoplay: true,\n    style: {width: 300, height: 300},\n  };\n\n  const {View} = useLottie(options);\n\n  return View;\n};\n\nexport default Heart;\n","import {useLottie, LottieOptions} from 'lottie-react';\nimport heartBreakJSON from '../assets/heartBreak.json';\n\nconst HeartBreak = () => {\n  const options: LottieOptions = {\n    animationData: heartBreakJSON,\n    loop: true,\n    autoplay: true,\n    style: {width: 300, height: 300},\n  };\n\n  const {View} = useLottie(options);\n\n  return View;\n};\n\nexport default HeartBreak;\n","import {useState} from 'react';\nimport './App.css';\nimport {\n  HeartNotAccepted as HeartBreak,\n  HeartAccepted as Heart,\n} from './animation';\n\nfunction App() {\n  const [isAccepted, setIsAccepted] = useState(0);\n\n  const onAccept = () => {\n    const value = 1;\n    setIsAccepted(value);\n  };\n\n  const onRefuse = () => {\n    const value = 2;\n    setIsAccepted(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <main className=\"App-header\">\n        {isAccepted === 0 && (\n          <div>\n            <h2>Would you like to be mine?</h2>\n            <button className=\"buttons accepted\" onClick={onAccept}>Yes</button>{' '}\n            <button className=\"buttons refuse\" onClick={onRefuse}>No</button>\n          </div>\n        )}\n        {isAccepted === 1 && (\n          <div>\n            <h4>Thank you mbak Nanda ‚ò∫Ô∏è</h4>\n            <Heart />\n          </div>\n        )}\n        {isAccepted === 2 && (\n          <div>\n            <h4>Thank you mbak buat pilihannya üòá</h4>\n            <HeartBreak />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}